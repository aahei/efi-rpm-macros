#
# EFI specific macro definitions
#

%efi @@EFI_ARCHES@@

%efi_vendor @@EFI_VENDOR@@

%efi_esp_root @@EFI_ESP_ROOT@@
%efi_esp_efi %{efi_esp_root}/EFI
%efi_esp_boot %{efi_esp_efi}/BOOT
%efi_esp_dir %{efi_esp_efi}/%{efi_vendor}

%efi_arch %{lua:
-- test if our arch matches
local function ifarch(archmacro)
  local target = rpm.expand(" %{_target_cpu} ")
  local arches = rpm.expand(" " .. archmacro .. " ")
  local match = string.match(arches, target)
  if not (match == nil) then
    return true
  end
end
-- Do the work
if ifarch("x86_64") then
  print("x64")
elseif ifarch("%{ix86}") then
  print("ia32")
elseif ifarch("aarch64") then
  print("aa64")
elseif ifarch("%{arm}") then
  print("arm")
elseif ifarch("ia64") then
  print("ia64")
else
  print("")
end
}

%efi_arch_upper %{lua:
-- test if our arch matches
local function ifarch(archmacro)
  local target = rpm.expand(" %{_target_cpu} ")
  local arches = rpm.expand(" " .. archmacro .. " ")
  local match = string.match(arches, target)
  if not (match == nil) then
    return true
  end
end
-- Do the work
if ifarch("x86_64") then
  print("X64")
elseif ifarch("%{ix86}") then
  print("IA32")
elseif ifarch("aarch64") then
  print("AA64")
elseif ifarch("%{arm}") then
  print("ARM")
elseif ifarch("ia64") then
  print("IA64")
else
  print("")
end
}
